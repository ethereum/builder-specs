post:
  operationId: "submitBlindedBlock"
  summary: Submit a signed blinded block and get unblinded execution payload.
  description: |
    Submits a `SignedBlindedBeaconBlock` to the builder, binding the proposer
    to the block. The builder is now able to unblind the transactions in
    `ExecutionPayloadHeader` without the possibility of the validator modifying
    them.

    If the builder is not able to unblind the corresponding
    `ExecutionPayloadHeader`, it must error.

    After Deneb, this endpoint will additionally accept `SignedBlindedBlobSidecars`, and return
    with additional unblinded blobs in response.
  tags:
    - Builder
  parameters:
    - in: header
      schema:
        $ref: '../../beacon-apis/beacon-node-oapi.yaml#/components/schemas/ConsensusVersion'
      required: false
      name: Eth-Consensus-Version
      description: "Version of the block being submitted"
  requestBody:
    description: A `SignedBlindedBeaconBlock` before Deneb, or `SignedBlindedBlockContents` after Deneb.
    required: true
    content:
      application/json:
        schema:
          oneOf:
            - $ref: "../../builder-oapi.yaml#/components/schemas/Bellatrix.SignedBlindedBeaconBlock"
            - $ref: "../../builder-oapi.yaml#/components/schemas/Capella.SignedBlindedBeaconBlock"
            - $ref: "../../builder-oapi.yaml#/components/schemas/Deneb.SignedBlindedBlockContents"
        examples:
          bellatrix:
            $ref: "../../builder-oapi.yaml#/components/examples/Bellatrix.SignedBlindedBeaconBlock"
          capella:
            $ref: "../../builder-oapi.yaml#/components/examples/Capella.SignedBlindedBeaconBlock"
          deneb:
            $ref: "../../builder-oapi.yaml#/components/examples/Deneb.SignedBlindedBlockContents"

  responses:
    "200":
      description: Success response.
      content:
        application/json:
          schema:
            title: SubmitBlindedBlockResponse
            type: object
            properties:
              version:
                type: string
                enum: [ bellatrix, capella, deneb ]
                example: "bellatrix"
              data:
                oneOf:
                  - $ref: "../../builder-oapi.yaml#/components/schemas/Bellatrix.ExecutionPayload"
                  - $ref: "../../builder-oapi.yaml#/components/schemas/Capella.ExecutionPayload"
                  - $ref: "../../builder-oapi.yaml#/components/schemas/Deneb.ExecutionPayloadAndBlobsBundle"
          examples:
            bellatrix:
              $ref: "../../builder-oapi.yaml#/components/examples/Bellatrix.ExecutionPayload"
            capella:
              $ref: "../../builder-oapi.yaml#/components/examples/Capella.ExecutionPayload"
            deneb:
              $ref: "../../builder-oapi.yaml#/components/examples/Deneb.ExecutionPayloadAndBlobsBundle"
    "400":
      description: Error response.
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../../builder-oapi.yaml#/components/schemas/ErrorMessage"
              - example:
                  code: 400
                  message: "Invalid block: missing signature"
    "500":
      $ref: "../../builder-oapi.yaml#/components/responses/InternalError"
