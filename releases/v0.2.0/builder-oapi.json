{
  "openapi": "3.0.3",
  "info": {
    "title": "Builder API",
    "description": "API specification for external builder nodes. This interface enables\nvalidators to delegate block building duties.\n\nAPI endpoints are individually versioned. As such, there is no direct\nrelationship between all v1 endpoints, all v2 endpoints, _etc._ and no such\nrelationship should be inferred. The rules that require an increase in\nversion number are as follows:\n\n  - no field that is listed in an endpoint shall be removed without an\n    increase in the version number\n  - no field that is listed in an endpoint shall be altered in terms of\n    format (_e.g._ from a string to an array) without an increase in the\n    version number\n\nNote that it is possible for a field to be added to an endpoint's data or\nmetadata without an increase in the version number.\n",
    "version": "dev",
    "contact": {
      "name": "Ethereum Github",
      "url": "https://github.com/ethereum/builder-specs/issues"
    },
    "license": {
      "name": "CC0-1.0",
      "url": "https://creativecommons.org/publicdomain/zero/1.0/"
    }
  },
  "servers": [
    {
      "url": "{server_url}",
      "variables": {
        "server_url": {
          "description": "Builder node URL",
          "default": "http://localhost:18550"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Builder",
      "description": "Set of endpoints to interact with an external block builder."
    }
  ],
  "paths": {
    "/eth/v1/builder/validators": {
      "post": {
        "operationId": "registerValidator",
        "summary": "Register or update a validator's block building preferences.",
        "description": "Registers a validator's preferred fee recipient and gas limit.\n\nBuilders should verify that `pubkey` corresponds to an active or pending\nvalidator, and that `signature` is valid under `pubkey`. Otherwise, builder\nmust error. Requests with `timestamp` less than the previous successful \nannouncement must error. Requests with `timestamp` more than 10 seconds in \nthe future must error.\n",
        "tags": [
          "Builder"
        ],
        "requestBody": {
          "description": "A signed declaration of a validator's block building preferences.\n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "The `SignedValidatorRegistration` object from the Builder API specification.",
                  "properties": {
                    "message": {
                      "type": "object",
                      "description": "The `ValidatorRegistration` object from the Builder API specification.",
                      "properties": {
                        "fee_recipient": {
                          "description": "Address to receive fees from the block.",
                          "type": "string",
                          "example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                          "pattern": "^0x[a-fA-F0-9]{40}$"
                        },
                        "gas_limit": {
                          "description": "Preferred gas limit of validator.",
                          "type": "string",
                          "example": "1"
                        },
                        "timestamp": {
                          "description": "Unix timestamp of registration.",
                          "type": "string",
                          "example": "1"
                        },
                        "pubkey": {
                          "description": "BLS public key of validator.",
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{96}$",
                          "example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
                        }
                      }
                    },
                    "signature": {
                      "type": "string",
                      "pattern": "^0x[a-fA-F0-9]{192}$",
                      "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response."
          },
          "400": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Either specific error code in case of invalid request or http status code",
                          "type": "number",
                          "example": 404
                        },
                        "message": {
                          "description": "Message describing error",
                          "type": "string"
                        },
                        "stacktraces": {
                          "description": "Optional stacktraces, sent when node is in debug mode",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "example": {
                        "code": 400,
                        "message": "unknown validator"
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Builder node internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "Either specific error code in case of invalid request or http status code",
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "description": "Message describing error",
                      "type": "string"
                    },
                    "stacktraces": {
                      "description": "Optional stacktraces, sent when node is in debug mode",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/eth/v1/builder/header/{slot}/{parent_hash}/{pubkey}": {
      "get": {
        "operationId": "getHeader",
        "summary": "Get an execution payload header.",
        "description": "Requests a builder node to produce a valid execution payload header, which\ncan be integrated into a blinded beacon block and signed.\n\nBuilder must immediately return the header that is able to pay the\nproposer's registered `fee_recipient` the most. If the builder is unaware\nof `parent_hash`, it must error. If `pubkey` does not match the builder's\nexpected proposer `pubkey` for `slot`, it must error. If the builder has\nnot received a validator registration associated with `pubkey`, it must\nerror.\n\nWhen possible, the builder must return a header with `gas_limit` equal to\nproposer's registered value. If this isn't possible due to the large\ndifference between `parent.gas_limit` and the preferred `gas_limit`, the\nbuilder must return a header that moves `gas_limit` the maximum amount\nallowed under the rules of consensus (currently `parent.gas_limit +/-\nparent.gas_limit / 1024`).\n",
        "tags": [
          "Builder"
        ],
        "parameters": [
          {
            "name": "slot",
            "in": "path",
            "required": true,
            "description": "The slot for which the block should be proposed.",
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "parent_hash",
            "in": "path",
            "required": true,
            "description": "Hash of execution layer block the proposer will build on.",
            "schema": {
              "type": "string",
              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
              "pattern": "^0x[a-fA-F0-9]{64}$"
            }
          },
          {
            "name": "pubkey",
            "in": "path",
            "required": true,
            "description": "The validator's BLS public key.",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{96}$",
              "description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
              "example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GetHeaderResponse",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "enum": [
                        "bellatrix"
                      ],
                      "example": "bellatrix"
                    },
                    "data": {
                      "oneOf": [
                        {
                          "type": "object",
                          "description": "The `SignedBuilderBid` object from the Builder API spec.",
                          "properties": {
                            "message": {
                              "type": "object",
                              "description": "The `BuilderBid` object from the Builder API spec.",
                              "properties": {
                                "header": {
                                  "description": "`ExecutionPayloadHeader` to use in block proposal.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
                                      "properties": {
                                        "parent_hash": {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        },
                                        "fee_recipient": {
                                          "type": "string",
                                          "description": "An address on the execution (Ethereum 1) network.",
                                          "example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                                          "pattern": "^0x[a-fA-F0-9]{40}$"
                                        },
                                        "state_root": {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        },
                                        "receipts_root": {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        },
                                        "logs_bloom": {
                                          "type": "string",
                                          "example": "0x
                                          "pattern": "^0x[a-fA-F0-9]{512}$"
                                        },
                                        "prev_randao": {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        },
                                        "block_number": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "gas_limit": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "gas_used": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "extra_data": {
                                          "type": "string",
                                          "description": "Extra data on the execution (Ethereum 1) network.",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{0,64}$"
                                        },
                                        "base_fee_per_gas": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "block_hash": {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "transactions_root": {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "value": {
                                  "description": "Payment in wei that will be paid to the `fee_recipient` account.",
                                  "type": "string",
                                  "example": "1"
                                },
                                "pubkey": {
                                  "description": "BLS public key of builder.",
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{96}$",
                                  "example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
                                }
                              }
                            },
                            "signature": {
                              "type": "string",
                              "pattern": "^0x[a-fA-F0-9]{192}$",
                              "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "bellatrix": {
                    "value": {
                      "version": "bellatrix",
                      "data": {
                        "message": {
                          "header": {
                            "parent_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                            "fee_recipient": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                            "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                            "receipts_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                            "logs_bloom": "0x
                            "prev_randao": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                            "block_number": "1",
                            "gas_limit": "1",
                            "gas_used": "1",
                            "timestamp": "1",
                            "extra_data": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                            "base_fee_per_gas": "1",
                            "block_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                            "transactions_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                          },
                          "value": "1",
                          "pubkey": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
                        },
                        "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No header is available."
          },
          "400": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "Either specific error code in case of invalid request or http status code",
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "description": "Message describing error",
                      "type": "string"
                    },
                    "stacktraces": {
                      "description": "Optional stacktraces, sent when node is in debug mode",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "InvalidRequest": {
                    "value": {
                      "code": 400,
                      "message": "Unknown hash: missing parent hash"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Builder node internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "Either specific error code in case of invalid request or http status code",
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "description": "Message describing error",
                      "type": "string"
                    },
                    "stacktraces": {
                      "description": "Optional stacktraces, sent when node is in debug mode",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/eth/v1/builder/blinded_blocks": {
      "post": {
        "operationId": "submitBlindedBlock",
        "summary": "Submit a signed blinded block and get unblinded execution payload.",
        "description": "Submits a `SignedBlindedBeaconBlock` to the builder, binding the proposer\nto the block. The builder is now able to unblind the transactions in\n`ExecutionPayloadHeader` without the possibility of the validator modifying\nthem.\n\nIf the builder is not able to unblind the corresponding\n`ExecutionPayloadHeader`, it must error.\n",
        "tags": [
          "Builder"
        ],
        "requestBody": {
          "description": "A `SignedBlindedBeaconBlock`.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "A variant of the the the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.",
                    "properties": {
                      "message": {
                        "description": "A variant of the the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "slot": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  {
                                    "description": "The slot to which this block corresponds."
                                  }
                                ]
                              },
                              "proposer_index": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  {
                                    "description": "Index of validator in validator registry."
                                  }
                                ]
                              },
                              "parent_root": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  },
                                  {
                                    "description": "The signing merkle root of the parent `BeaconBlock`."
                                  }
                                ]
                              },
                              "state_root": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  },
                                  {
                                    "description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "body": {
                                "description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
                                    "properties": {
                                      "randao_reveal": {
                                        "allOf": [
                                          {
                                            "type": "string",
                                            "pattern": "^0x[a-fA-F0-9]{192}$",
                                            "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                          },
                                          {
                                            "description": "The RanDAO reveal value provided by the validator."
                                          }
                                        ]
                                      },
                                      "eth1_data": {
                                        "type": "object",
                                        "description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
                                        "properties": {
                                          "deposit_root": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                "pattern": "^0x[a-fA-F0-9]{64}$"
                                              },
                                              {
                                                "description": "Root of the deposit tree."
                                              }
                                            ]
                                          },
                                          "deposit_count": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "1"
                                              },
                                              {
                                                "description": "Total number of deposits."
                                              }
                                            ]
                                          },
                                          "block_hash": {
                                            "allOf": [
                                              {
                                                "type": "string",
                                                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                "pattern": "^0x[a-fA-F0-9]{64}$"
                                              },
                                              {
                                                "description": "Ethereum 1.x block hash."
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "graffiti": {
                                        "type": "string",
                                        "pattern": "^0x[a-fA-F0-9]{64}$"
                                      },
                                      "proposer_slashings": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
                                          "properties": {
                                            "signed_header_1": {
                                              "type": "object",
                                              "description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
                                              "properties": {
                                                "message": {
                                                  "description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "slot": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "1"
                                                            },
                                                            {
                                                              "description": "The slot to which this block corresponds."
                                                            }
                                                          ]
                                                        },
                                                        "proposer_index": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "1"
                                                            },
                                                            {
                                                              "description": "Index of validator in validator registry."
                                                            }
                                                          ]
                                                        },
                                                        "parent_root": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                                            },
                                                            {
                                                              "description": "The signing merkle root of the parent `BeaconBlock`."
                                                            }
                                                          ]
                                                        },
                                                        "state_root": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                                            },
                                                            {
                                                              "description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "body_root": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                                            },
                                                            {
                                                              "description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "signature": {
                                                  "type": "string",
                                                  "pattern": "^0x[a-fA-F0-9]{192}$",
                                                  "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                                }
                                              }
                                            },
                                            "signed_header_2": {
                                              "type": "object",
                                              "description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
                                              "properties": {
                                                "message": {
                                                  "description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
                                                  "allOf": [
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "slot": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "1"
                                                            },
                                                            {
                                                              "description": "The slot to which this block corresponds."
                                                            }
                                                          ]
                                                        },
                                                        "proposer_index": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "1"
                                                            },
                                                            {
                                                              "description": "Index of validator in validator registry."
                                                            }
                                                          ]
                                                        },
                                                        "parent_root": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                                            },
                                                            {
                                                              "description": "The signing merkle root of the parent `BeaconBlock`."
                                                            }
                                                          ]
                                                        },
                                                        "state_root": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                                            },
                                                            {
                                                              "description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "properties": {
                                                        "body_root": {
                                                          "allOf": [
                                                            {
                                                              "type": "string",
                                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                                            },
                                                            {
                                                              "description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "signature": {
                                                  "type": "string",
                                                  "pattern": "^0x[a-fA-F0-9]{192}$",
                                                  "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "attester_slashings": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.",
                                          "properties": {
                                            "attestation_1": {
                                              "type": "object",
                                              "description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
                                              "properties": {
                                                "attesting_indices": {
                                                  "type": "array",
                                                  "maxItems": 2048,
                                                  "description": "Attesting validator indices",
                                                  "items": {
                                                    "type": "string",
                                                    "example": "1"
                                                  }
                                                },
                                                "signature": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "pattern": "^0x[a-fA-F0-9]{192}$",
                                                      "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                                    },
                                                    {
                                                      "description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
                                                    }
                                                  ]
                                                },
                                                "data": {
                                                  "type": "object",
                                                  "description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
                                                  "properties": {
                                                    "slot": {
                                                      "type": "string",
                                                      "example": "1"
                                                    },
                                                    "index": {
                                                      "type": "string",
                                                      "example": "1"
                                                    },
                                                    "beacon_block_root": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                                        },
                                                        {
                                                          "description": "LMD GHOST vote."
                                                        }
                                                      ]
                                                    },
                                                    "source": {
                                                      "type": "object",
                                                      "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                                      "properties": {
                                                        "epoch": {
                                                          "type": "string",
                                                          "example": "1"
                                                        },
                                                        "root": {
                                                          "type": "string",
                                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                                        }
                                                      }
                                                    },
                                                    "target": {
                                                      "type": "object",
                                                      "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                                      "properties": {
                                                        "epoch": {
                                                          "type": "string",
                                                          "example": "1"
                                                        },
                                                        "root": {
                                                          "type": "string",
                                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "attestation_2": {
                                              "type": "object",
                                              "description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
                                              "properties": {
                                                "attesting_indices": {
                                                  "type": "array",
                                                  "maxItems": 2048,
                                                  "description": "Attesting validator indices",
                                                  "items": {
                                                    "type": "string",
                                                    "example": "1"
                                                  }
                                                },
                                                "signature": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "pattern": "^0x[a-fA-F0-9]{192}$",
                                                      "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                                    },
                                                    {
                                                      "description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
                                                    }
                                                  ]
                                                },
                                                "data": {
                                                  "type": "object",
                                                  "description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
                                                  "properties": {
                                                    "slot": {
                                                      "type": "string",
                                                      "example": "1"
                                                    },
                                                    "index": {
                                                      "type": "string",
                                                      "example": "1"
                                                    },
                                                    "beacon_block_root": {
                                                      "allOf": [
                                                        {
                                                          "type": "string",
                                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                                        },
                                                        {
                                                          "description": "LMD GHOST vote."
                                                        }
                                                      ]
                                                    },
                                                    "source": {
                                                      "type": "object",
                                                      "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                                      "properties": {
                                                        "epoch": {
                                                          "type": "string",
                                                          "example": "1"
                                                        },
                                                        "root": {
                                                          "type": "string",
                                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                                        }
                                                      }
                                                    },
                                                    "target": {
                                                      "type": "object",
                                                      "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                                      "properties": {
                                                        "epoch": {
                                                          "type": "string",
                                                          "example": "1"
                                                        },
                                                        "root": {
                                                          "type": "string",
                                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "attestations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
                                          "properties": {
                                            "aggregation_bits": {
                                              "type": "string",
                                              "example": "0x01",
                                              "pattern": "^0x[a-fA-F0-9]+$",
                                              "description": "Attester aggregation bits."
                                            },
                                            "signature": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "pattern": "^0x[a-fA-F0-9]{192}$",
                                                  "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                                },
                                                {
                                                  "description": "BLS aggregate signature."
                                                }
                                              ]
                                            },
                                            "data": {
                                              "type": "object",
                                              "description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
                                              "properties": {
                                                "slot": {
                                                  "type": "string",
                                                  "example": "1"
                                                },
                                                "index": {
                                                  "type": "string",
                                                  "example": "1"
                                                },
                                                "beacon_block_root": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                      "pattern": "^0x[a-fA-F0-9]{64}$"
                                                    },
                                                    {
                                                      "description": "LMD GHOST vote."
                                                    }
                                                  ]
                                                },
                                                "source": {
                                                  "type": "object",
                                                  "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                                  "properties": {
                                                    "epoch": {
                                                      "type": "string",
                                                      "example": "1"
                                                    },
                                                    "root": {
                                                      "type": "string",
                                                      "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                      "pattern": "^0x[a-fA-F0-9]{64}$"
                                                    }
                                                  }
                                                },
                                                "target": {
                                                  "type": "object",
                                                  "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                                  "properties": {
                                                    "epoch": {
                                                      "type": "string",
                                                      "example": "1"
                                                    },
                                                    "root": {
                                                      "type": "string",
                                                      "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                      "pattern": "^0x[a-fA-F0-9]{64}$"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "deposits": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
                                          "properties": {
                                            "proof": {
                                              "type": "array",
                                              "description": "Branch in the deposit tree.",
                                              "items": {
                                                "allOf": [
                                                  {
                                                    "type": "string",
                                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                                  }
                                                ]
                                              },
                                              "minItems": 32,
                                              "maxItems": 32
                                            },
                                            "data": {
                                              "type": "object",
                                              "description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
                                              "properties": {
                                                "pubkey": {
                                                  "type": "string",
                                                  "pattern": "^0x[a-fA-F0-9]{96}$",
                                                  "description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
                                                  "example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
                                                },
                                                "withdrawal_credentials": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                      "pattern": "^0x[a-fA-F0-9]{64}$"
                                                    },
                                                    {
                                                      "description": "The withdrawal credentials."
                                                    }
                                                  ]
                                                },
                                                "amount": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "example": "1"
                                                    },
                                                    {
                                                      "description": "Amount in Gwei."
                                                    }
                                                  ]
                                                },
                                                "signature": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "pattern": "^0x[a-fA-F0-9]{192}$",
                                                      "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                                    },
                                                    {
                                                      "description": "Container self-signature."
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "voluntary_exits": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
                                          "properties": {
                                            "message": {
                                              "type": "object",
                                              "description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
                                              "properties": {
                                                "epoch": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "example": "1"
                                                    },
                                                    {
                                                      "description": "Minimum epoch for processing exit."
                                                    }
                                                  ]
                                                },
                                                "validator_index": {
                                                  "allOf": [
                                                    {
                                                      "type": "string",
                                                      "example": "1"
                                                    },
                                                    {
                                                      "description": "Index of the exiting validator."
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "signature": {
                                              "type": "string",
                                              "pattern": "^0x[a-fA-F0-9]{192}$",
                                              "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                            }
                                          }
                                        }
                                      },
                                      "sync_aggregate": {
                                        "type": "object",
                                        "description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
                                        "properties": {
                                          "sync_committee_bits": {
                                            "type": "string",
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "example": "0x01",
                                            "description": "Aggregation bits of sync"
                                          },
                                          "sync_committee_signature": {
                                            "type": "string",
                                            "pattern": "^0x[a-fA-F0-9]{192}$",
                                            "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "execution_payload_header": {
                                        "description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
                                            "properties": {
                                              "parent_hash": {
                                                "type": "string",
                                                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                "pattern": "^0x[a-fA-F0-9]{64}$"
                                              },
                                              "fee_recipient": {
                                                "type": "string",
                                                "description": "An address on the execution (Ethereum 1) network.",
                                                "example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                                                "pattern": "^0x[a-fA-F0-9]{40}$"
                                              },
                                              "state_root": {
                                                "type": "string",
                                                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                "pattern": "^0x[a-fA-F0-9]{64}$"
                                              },
                                              "receipts_root": {
                                                "type": "string",
                                                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                "pattern": "^0x[a-fA-F0-9]{64}$"
                                              },
                                              "logs_bloom": {
                                                "type": "string",
                                                "example": "0x
                                                "pattern": "^0x[a-fA-F0-9]{512}$"
                                              },
                                              "prev_randao": {
                                                "type": "string",
                                                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                "pattern": "^0x[a-fA-F0-9]{64}$"
                                              },
                                              "block_number": {
                                                "type": "string",
                                                "example": "1"
                                              },
                                              "gas_limit": {
                                                "type": "string",
                                                "example": "1"
                                              },
                                              "gas_used": {
                                                "type": "string",
                                                "example": "1"
                                              },
                                              "timestamp": {
                                                "type": "string",
                                                "example": "1"
                                              },
                                              "extra_data": {
                                                "type": "string",
                                                "description": "Extra data on the execution (Ethereum 1) network.",
                                                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                "pattern": "^0x[a-fA-F0-9]{0,64}$"
                                              },
                                              "base_fee_per_gas": {
                                                "type": "string",
                                                "example": "1"
                                              },
                                              "block_hash": {
                                                "type": "string",
                                                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                "pattern": "^0x[a-fA-F0-9]{64}$"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "transactions_root": {
                                                "type": "string",
                                                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                "pattern": "^0x[a-fA-F0-9]{64}$"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "signature": {
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{192}$",
                        "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "bellatrix": {
                  "value": {
                    "message": {
                      "slot": "1",
                      "proposer_index": "1",
                      "parent_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                      "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                      "body": {
                        "randao_reveal": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505",
                        "eth1_data": {
                          "deposit_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                          "deposit_count": "1",
                          "block_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                        },
                        "graffiti": "0xdeadbeefc0ffee",
                        "proposer_slashings": [
                          {
                            "signed_header_1": {
                              "message": {
                                "slot": "1",
                                "proposer_index": "1",
                                "parent_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                "body_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                              },
                              "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                            },
                            "signed_header_2": {
                              "message": {
                                "slot": "1",
                                "proposer_index": "1",
                                "parent_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                "body_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                              },
                              "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                            }
                          }
                        ],
                        "attester_slashings": [
                          {
                            "attestation_1": {
                              "attesting_indices": [
                                "1"
                              ],
                              "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505",
                              "data": {
                                "slot": "1",
                                "index": "1",
                                "beacon_block_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                "source": {
                                  "epoch": "1",
                                  "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                                },
                                "target": {
                                  "epoch": "1",
                                  "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                                }
                              }
                            },
                            "attestation_2": {
                              "attesting_indices": [
                                "1"
                              ],
                              "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505",
                              "data": {
                                "slot": "1",
                                "index": "1",
                                "beacon_block_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                "source": {
                                  "epoch": "1",
                                  "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                                },
                                "target": {
                                  "epoch": "1",
                                  "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                                }
                              }
                            }
                          }
                        ],
                        "attestations": [
                          {
                            "aggregation_bits": "0x01",
                            "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505",
                            "data": {
                              "slot": "1",
                              "index": "1",
                              "beacon_block_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                              "source": {
                                "epoch": "1",
                                "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                              },
                              "target": {
                                "epoch": "1",
                                "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                              }
                            }
                          }
                        ],
                        "deposits": [
                          {
                            "proof": [
                              "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                            ],
                            "data": {
                              "pubkey": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a",
                              "withdrawal_credentials": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                              "amount": "1",
                              "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                            }
                          }
                        ],
                        "voluntary_exits": [
                          {
                            "message": {
                              "epoch": "1",
                              "validator_index": "1"
                            },
                            "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                          }
                        ],
                        "sync_aggregate": {
                          "sync_committee_bits": "0x01",
                          "sync_committee_signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                        },
                        "execution_payload_header": {
                          "parent_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                          "fee_recipient": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                          "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                          "receipts_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                          "logs_bloom": "0x
                          "prev_randao": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                          "block_number": "1",
                          "gas_limit": "1",
                          "gas_used": "1",
                          "timestamp": "1",
                          "extra_data": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                          "base_fee_per_gas": "1",
                          "block_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                          "transactions_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                        }
                      }
                    },
                    "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SubmitBlindedBlockResponse",
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "enum": [
                        "bellatrix"
                      ],
                      "example": "bellatrix"
                    },
                    "data": {
                      "oneOf": [
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
                              "properties": {
                                "parent_hash": {
                                  "type": "string",
                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                },
                                "fee_recipient": {
                                  "type": "string",
                                  "description": "An address on the execution (Ethereum 1) network.",
                                  "example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                                  "pattern": "^0x[a-fA-F0-9]{40}$"
                                },
                                "state_root": {
                                  "type": "string",
                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                },
                                "receipts_root": {
                                  "type": "string",
                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                },
                                "logs_bloom": {
                                  "type": "string",
                                  "example": "0x
                                  "pattern": "^0x[a-fA-F0-9]{512}$"
                                },
                                "prev_randao": {
                                  "type": "string",
                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                },
                                "block_number": {
                                  "type": "string",
                                  "example": "1"
                                },
                                "gas_limit": {
                                  "type": "string",
                                  "example": "1"
                                },
                                "gas_used": {
                                  "type": "string",
                                  "example": "1"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "1"
                                },
                                "extra_data": {
                                  "type": "string",
                                  "description": "Extra data on the execution (Ethereum 1) network.",
                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                  "pattern": "^0x[a-fA-F0-9]{0,64}$"
                                },
                                "base_fee_per_gas": {
                                  "type": "string",
                                  "example": "1"
                                },
                                "block_hash": {
                                  "type": "string",
                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "transactions": {
                                  "type": "array",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "A transaction on the execution (Ethereum 1) network.",
                                        "example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
                                        "pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
                                      }
                                    ]
                                  },
                                  "maxItems": 1048576
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "bellatrix": {
                    "value": {
                      "version": "bellatrix",
                      "data": {
                        "parent_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "fee_recipient": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                        "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "receipts_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "logs_bloom": "0x
                        "prev_randao": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "block_number": "1",
                        "gas_limit": "1",
                        "gas_used": "1",
                        "timestamp": "1",
                        "extra_data": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "base_fee_per_gas": "1",
                        "block_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "transactions": [
                          "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Either specific error code in case of invalid request or http status code",
                          "type": "number",
                          "example": 404
                        },
                        "message": {
                          "description": "Message describing error",
                          "type": "string"
                        },
                        "stacktraces": {
                          "description": "Optional stacktraces, sent when node is in debug mode",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "example": {
                        "code": 400,
                        "message": "Invalid block: missing signature"
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Builder node internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "Either specific error code in case of invalid request or http status code",
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "description": "Message describing error",
                      "type": "string"
                    },
                    "stacktraces": {
                      "description": "Optional stacktraces, sent when node is in debug mode",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/eth/v1/builder/status": {
      "get": {
        "operationId": "status",
        "summary": "Check if builder is healthy.",
        "description": "Checks if builder can respond to requests normally.",
        "tags": [
          "Builder"
        ],
        "responses": {
          "200": {
            "description": "Success response."
          },
          "500": {
            "description": "Builder node internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "Either specific error code in case of invalid request or http status code",
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "description": "Message describing error",
                      "type": "string"
                    },
                    "stacktraces": {
                      "description": "Optional stacktraces, sent when node is in debug mode",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Uint64": {
        "type": "string",
        "example": "1"
      },
      "Root": {
        "type": "string",
        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
        "pattern": "^0x[a-fA-F0-9]{64}$"
      },
      "Pubkey": {
        "type": "string",
        "pattern": "^0x[a-fA-F0-9]{96}$",
        "description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
        "example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Either specific error code in case of invalid request or http status code",
            "type": "number",
            "example": 404
          },
          "message": {
            "description": "Message describing error",
            "type": "string"
          },
          "stacktraces": {
            "description": "Optional stacktraces, sent when node is in debug mode",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Bellatrix.ExecutionPayload": {
        "allOf": [
          {
            "type": "object",
            "description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
            "properties": {
              "parent_hash": {
                "type": "string",
                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "pattern": "^0x[a-fA-F0-9]{64}$"
              },
              "fee_recipient": {
                "type": "string",
                "description": "An address on the execution (Ethereum 1) network.",
                "example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                "pattern": "^0x[a-fA-F0-9]{40}$"
              },
              "state_root": {
                "type": "string",
                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "pattern": "^0x[a-fA-F0-9]{64}$"
              },
              "receipts_root": {
                "type": "string",
                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "pattern": "^0x[a-fA-F0-9]{64}$"
              },
              "logs_bloom": {
                "type": "string",
                "example": "0x
                "pattern": "^0x[a-fA-F0-9]{512}$"
              },
              "prev_randao": {
                "type": "string",
                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "pattern": "^0x[a-fA-F0-9]{64}$"
              },
              "block_number": {
                "type": "string",
                "example": "1"
              },
              "gas_limit": {
                "type": "string",
                "example": "1"
              },
              "gas_used": {
                "type": "string",
                "example": "1"
              },
              "timestamp": {
                "type": "string",
                "example": "1"
              },
              "extra_data": {
                "type": "string",
                "description": "Extra data on the execution (Ethereum 1) network.",
                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "pattern": "^0x[a-fA-F0-9]{0,64}$"
              },
              "base_fee_per_gas": {
                "type": "string",
                "example": "1"
              },
              "block_hash": {
                "type": "string",
                "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "pattern": "^0x[a-fA-F0-9]{64}$"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "transactions": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "string",
                      "description": "A transaction on the execution (Ethereum 1) network.",
                      "example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
                      "pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
                    }
                  ]
                },
                "maxItems": 1048576
              }
            }
          }
        ]
      },
      "Bellatrix.SignedBlindedBeaconBlock": {
        "type": "object",
        "description": "A variant of the the the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.",
        "properties": {
          "message": {
            "description": "A variant of the the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "slot": {
                    "allOf": [
                      {
                        "type": "string",
                        "example": "1"
                      },
                      {
                        "description": "The slot to which this block corresponds."
                      }
                    ]
                  },
                  "proposer_index": {
                    "allOf": [
                      {
                        "type": "string",
                        "example": "1"
                      },
                      {
                        "description": "Index of validator in validator registry."
                      }
                    ]
                  },
                  "parent_root": {
                    "allOf": [
                      {
                        "type": "string",
                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "pattern": "^0x[a-fA-F0-9]{64}$"
                      },
                      {
                        "description": "The signing merkle root of the parent `BeaconBlock`."
                      }
                    ]
                  },
                  "state_root": {
                    "allOf": [
                      {
                        "type": "string",
                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "pattern": "^0x[a-fA-F0-9]{64}$"
                      },
                      {
                        "description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
                        "properties": {
                          "randao_reveal": {
                            "allOf": [
                              {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{192}$",
                                "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                              },
                              {
                                "description": "The RanDAO reveal value provided by the validator."
                              }
                            ]
                          },
                          "eth1_data": {
                            "type": "object",
                            "description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
                            "properties": {
                              "deposit_root": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  },
                                  {
                                    "description": "Root of the deposit tree."
                                  }
                                ]
                              },
                              "deposit_count": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  {
                                    "description": "Total number of deposits."
                                  }
                                ]
                              },
                              "block_hash": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  },
                                  {
                                    "description": "Ethereum 1.x block hash."
                                  }
                                ]
                              }
                            }
                          },
                          "graffiti": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{64}$"
                          },
                          "proposer_slashings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
                              "properties": {
                                "signed_header_1": {
                                  "type": "object",
                                  "description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
                                  "properties": {
                                    "message": {
                                      "description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "slot": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "1"
                                                },
                                                {
                                                  "description": "The slot to which this block corresponds."
                                                }
                                              ]
                                            },
                                            "proposer_index": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "1"
                                                },
                                                {
                                                  "description": "Index of validator in validator registry."
                                                }
                                              ]
                                            },
                                            "parent_root": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                                },
                                                {
                                                  "description": "The signing merkle root of the parent `BeaconBlock`."
                                                }
                                              ]
                                            },
                                            "state_root": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                                },
                                                {
                                                  "description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "body_root": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                                },
                                                {
                                                  "description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "signature": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{192}$",
                                      "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                    }
                                  }
                                },
                                "signed_header_2": {
                                  "type": "object",
                                  "description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
                                  "properties": {
                                    "message": {
                                      "description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "slot": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "1"
                                                },
                                                {
                                                  "description": "The slot to which this block corresponds."
                                                }
                                              ]
                                            },
                                            "proposer_index": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "1"
                                                },
                                                {
                                                  "description": "Index of validator in validator registry."
                                                }
                                              ]
                                            },
                                            "parent_root": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                                },
                                                {
                                                  "description": "The signing merkle root of the parent `BeaconBlock`."
                                                }
                                              ]
                                            },
                                            "state_root": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                                },
                                                {
                                                  "description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "body_root": {
                                              "allOf": [
                                                {
                                                  "type": "string",
                                                  "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                                  "pattern": "^0x[a-fA-F0-9]{64}$"
                                                },
                                                {
                                                  "description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "signature": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{192}$",
                                      "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "attester_slashings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.",
                              "properties": {
                                "attestation_1": {
                                  "type": "object",
                                  "description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
                                  "properties": {
                                    "attesting_indices": {
                                      "type": "array",
                                      "maxItems": 2048,
                                      "description": "Attesting validator indices",
                                      "items": {
                                        "type": "string",
                                        "example": "1"
                                      }
                                    },
                                    "signature": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "pattern": "^0x[a-fA-F0-9]{192}$",
                                          "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                        },
                                        {
                                          "description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
                                        }
                                      ]
                                    },
                                    "data": {
                                      "type": "object",
                                      "description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
                                      "properties": {
                                        "slot": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "index": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "beacon_block_root": {
                                          "allOf": [
                                            {
                                              "type": "string",
                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                            },
                                            {
                                              "description": "LMD GHOST vote."
                                            }
                                          ]
                                        },
                                        "source": {
                                          "type": "object",
                                          "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                          "properties": {
                                            "epoch": {
                                              "type": "string",
                                              "example": "1"
                                            },
                                            "root": {
                                              "type": "string",
                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                            }
                                          }
                                        },
                                        "target": {
                                          "type": "object",
                                          "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                          "properties": {
                                            "epoch": {
                                              "type": "string",
                                              "example": "1"
                                            },
                                            "root": {
                                              "type": "string",
                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "attestation_2": {
                                  "type": "object",
                                  "description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
                                  "properties": {
                                    "attesting_indices": {
                                      "type": "array",
                                      "maxItems": 2048,
                                      "description": "Attesting validator indices",
                                      "items": {
                                        "type": "string",
                                        "example": "1"
                                      }
                                    },
                                    "signature": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "pattern": "^0x[a-fA-F0-9]{192}$",
                                          "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                        },
                                        {
                                          "description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
                                        }
                                      ]
                                    },
                                    "data": {
                                      "type": "object",
                                      "description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
                                      "properties": {
                                        "slot": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "index": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "beacon_block_root": {
                                          "allOf": [
                                            {
                                              "type": "string",
                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                            },
                                            {
                                              "description": "LMD GHOST vote."
                                            }
                                          ]
                                        },
                                        "source": {
                                          "type": "object",
                                          "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                          "properties": {
                                            "epoch": {
                                              "type": "string",
                                              "example": "1"
                                            },
                                            "root": {
                                              "type": "string",
                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                            }
                                          }
                                        },
                                        "target": {
                                          "type": "object",
                                          "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                          "properties": {
                                            "epoch": {
                                              "type": "string",
                                              "example": "1"
                                            },
                                            "root": {
                                              "type": "string",
                                              "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                              "pattern": "^0x[a-fA-F0-9]{64}$"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "attestations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
                              "properties": {
                                "aggregation_bits": {
                                  "type": "string",
                                  "example": "0x01",
                                  "pattern": "^0x[a-fA-F0-9]+$",
                                  "description": "Attester aggregation bits."
                                },
                                "signature": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{192}$",
                                      "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                    },
                                    {
                                      "description": "BLS aggregate signature."
                                    }
                                  ]
                                },
                                "data": {
                                  "type": "object",
                                  "description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
                                  "properties": {
                                    "slot": {
                                      "type": "string",
                                      "example": "1"
                                    },
                                    "index": {
                                      "type": "string",
                                      "example": "1"
                                    },
                                    "beacon_block_root": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        },
                                        {
                                          "description": "LMD GHOST vote."
                                        }
                                      ]
                                    },
                                    "source": {
                                      "type": "object",
                                      "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                      "properties": {
                                        "epoch": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "root": {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        }
                                      }
                                    },
                                    "target": {
                                      "type": "object",
                                      "description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint",
                                      "properties": {
                                        "epoch": {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        "root": {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "deposits": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
                              "properties": {
                                "proof": {
                                  "type": "array",
                                  "description": "Branch in the deposit tree.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                        "pattern": "^0x[a-fA-F0-9]{64}$"
                                      }
                                    ]
                                  },
                                  "minItems": 32,
                                  "maxItems": 32
                                },
                                "data": {
                                  "type": "object",
                                  "description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
                                  "properties": {
                                    "pubkey": {
                                      "type": "string",
                                      "pattern": "^0x[a-fA-F0-9]{96}$",
                                      "description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
                                      "example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
                                    },
                                    "withdrawal_credentials": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                          "pattern": "^0x[a-fA-F0-9]{64}$"
                                        },
                                        {
                                          "description": "The withdrawal credentials."
                                        }
                                      ]
                                    },
                                    "amount": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        {
                                          "description": "Amount in Gwei."
                                        }
                                      ]
                                    },
                                    "signature": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "pattern": "^0x[a-fA-F0-9]{192}$",
                                          "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                        },
                                        {
                                          "description": "Container self-signature."
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "voluntary_exits": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
                              "properties": {
                                "message": {
                                  "type": "object",
                                  "description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
                                  "properties": {
                                    "epoch": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        {
                                          "description": "Minimum epoch for processing exit."
                                        }
                                      ]
                                    },
                                    "validator_index": {
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "example": "1"
                                        },
                                        {
                                          "description": "Index of the exiting validator."
                                        }
                                      ]
                                    }
                                  }
                                },
                                "signature": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{192}$",
                                  "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                                }
                              }
                            }
                          },
                          "sync_aggregate": {
                            "type": "object",
                            "description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
                            "properties": {
                              "sync_committee_bits": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "example": "0x01",
                                "description": "Aggregation bits of sync"
                              },
                              "sync_committee_signature": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{192}$",
                                "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "execution_payload_header": {
                            "description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.",
                            "allOf": [
                              {
                                "type": "object",
                                "description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
                                "properties": {
                                  "parent_hash": {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  },
                                  "fee_recipient": {
                                    "type": "string",
                                    "description": "An address on the execution (Ethereum 1) network.",
                                    "example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                                    "pattern": "^0x[a-fA-F0-9]{40}$"
                                  },
                                  "state_root": {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  },
                                  "receipts_root": {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  },
                                  "logs_bloom": {
                                    "type": "string",
                                    "example": "0x
                                    "pattern": "^0x[a-fA-F0-9]{512}$"
                                  },
                                  "prev_randao": {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  },
                                  "block_number": {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  "gas_limit": {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  "gas_used": {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  "timestamp": {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  "extra_data": {
                                    "type": "string",
                                    "description": "Extra data on the execution (Ethereum 1) network.",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{0,64}$"
                                  },
                                  "base_fee_per_gas": {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  "block_hash": {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "transactions_root": {
                                    "type": "string",
                                    "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                                    "pattern": "^0x[a-fA-F0-9]{64}$"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "signature": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{192}$",
            "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
          }
        }
      },
      "Bellatrix.SignedBuilderBid": {
        "type": "object",
        "description": "The `SignedBuilderBid` object from the Builder API spec.",
        "properties": {
          "message": {
            "type": "object",
            "description": "The `BuilderBid` object from the Builder API spec.",
            "properties": {
              "header": {
                "description": "`ExecutionPayloadHeader` to use in block proposal.",
                "allOf": [
                  {
                    "type": "object",
                    "description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
                    "properties": {
                      "parent_hash": {
                        "type": "string",
                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "pattern": "^0x[a-fA-F0-9]{64}$"
                      },
                      "fee_recipient": {
                        "type": "string",
                        "description": "An address on the execution (Ethereum 1) network.",
                        "example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                        "pattern": "^0x[a-fA-F0-9]{40}$"
                      },
                      "state_root": {
                        "type": "string",
                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "pattern": "^0x[a-fA-F0-9]{64}$"
                      },
                      "receipts_root": {
                        "type": "string",
                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "pattern": "^0x[a-fA-F0-9]{64}$"
                      },
                      "logs_bloom": {
                        "type": "string",
                        "example": "0x
                        "pattern": "^0x[a-fA-F0-9]{512}$"
                      },
                      "prev_randao": {
                        "type": "string",
                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "pattern": "^0x[a-fA-F0-9]{64}$"
                      },
                      "block_number": {
                        "type": "string",
                        "example": "1"
                      },
                      "gas_limit": {
                        "type": "string",
                        "example": "1"
                      },
                      "gas_used": {
                        "type": "string",
                        "example": "1"
                      },
                      "timestamp": {
                        "type": "string",
                        "example": "1"
                      },
                      "extra_data": {
                        "type": "string",
                        "description": "Extra data on the execution (Ethereum 1) network.",
                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "pattern": "^0x[a-fA-F0-9]{0,64}$"
                      },
                      "base_fee_per_gas": {
                        "type": "string",
                        "example": "1"
                      },
                      "block_hash": {
                        "type": "string",
                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "pattern": "^0x[a-fA-F0-9]{64}$"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "transactions_root": {
                        "type": "string",
                        "example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                        "pattern": "^0x[a-fA-F0-9]{64}$"
                      }
                    }
                  }
                ]
              },
              "value": {
                "description": "Payment in wei that will be paid to the `fee_recipient` account.",
                "type": "string",
                "example": "1"
              },
              "pubkey": {
                "description": "BLS public key of builder.",
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{96}$",
                "example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
              }
            }
          },
          "signature": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{192}$",
            "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
          }
        }
      },
      "SignedValidatorRegistration": {
        "type": "object",
        "description": "The `SignedValidatorRegistration` object from the Builder API specification.",
        "properties": {
          "message": {
            "type": "object",
            "description": "The `ValidatorRegistration` object from the Builder API specification.",
            "properties": {
              "fee_recipient": {
                "description": "Address to receive fees from the block.",
                "type": "string",
                "example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                "pattern": "^0x[a-fA-F0-9]{40}$"
              },
              "gas_limit": {
                "description": "Preferred gas limit of validator.",
                "type": "string",
                "example": "1"
              },
              "timestamp": {
                "description": "Unix timestamp of registration.",
                "type": "string",
                "example": "1"
              },
              "pubkey": {
                "description": "BLS public key of validator.",
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{96}$",
                "example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
              }
            }
          },
          "signature": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{192}$",
            "example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
          }
        }
      }
    },
    "responses": {
      "InternalError": {
        "description": "Builder node internal error.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "description": "Either specific error code in case of invalid request or http status code",
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "description": "Message describing error",
                  "type": "string"
                },
                "stacktraces": {
                  "description": "Optional stacktraces, sent when node is in debug mode",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "example": {
              "code": 500,
              "message": "Internal server error"
            }
          }
        }
      }
    },
    "examples": {
      "Bellatrix.SignedBlindedBeaconBlock": {
        "value": {
          "message": {
            "slot": "1",
            "proposer_index": "1",
            "parent_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
            "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
            "body": {
              "randao_reveal": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505",
              "eth1_data": {
                "deposit_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "deposit_count": "1",
                "block_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
              },
              "graffiti": "0xdeadbeefc0ffee",
              "proposer_slashings": [
                {
                  "signed_header_1": {
                    "message": {
                      "slot": "1",
                      "proposer_index": "1",
                      "parent_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                      "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                      "body_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                    },
                    "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                  },
                  "signed_header_2": {
                    "message": {
                      "slot": "1",
                      "proposer_index": "1",
                      "parent_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                      "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                      "body_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                    },
                    "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                  }
                }
              ],
              "attester_slashings": [
                {
                  "attestation_1": {
                    "attesting_indices": [
                      "1"
                    ],
                    "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505",
                    "data": {
                      "slot": "1",
                      "index": "1",
                      "beacon_block_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                      "source": {
                        "epoch": "1",
                        "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                      },
                      "target": {
                        "epoch": "1",
                        "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                      }
                    }
                  },
                  "attestation_2": {
                    "attesting_indices": [
                      "1"
                    ],
                    "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505",
                    "data": {
                      "slot": "1",
                      "index": "1",
                      "beacon_block_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                      "source": {
                        "epoch": "1",
                        "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                      },
                      "target": {
                        "epoch": "1",
                        "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                      }
                    }
                  }
                }
              ],
              "attestations": [
                {
                  "aggregation_bits": "0x01",
                  "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505",
                  "data": {
                    "slot": "1",
                    "index": "1",
                    "beacon_block_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                    "source": {
                      "epoch": "1",
                      "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                    },
                    "target": {
                      "epoch": "1",
                      "root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                    }
                  }
                }
              ],
              "deposits": [
                {
                  "proof": [
                    "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
                  ],
                  "data": {
                    "pubkey": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a",
                    "withdrawal_credentials": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                    "amount": "1",
                    "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                  }
                }
              ],
              "voluntary_exits": [
                {
                  "message": {
                    "epoch": "1",
                    "validator_index": "1"
                  },
                  "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
                }
              ],
              "sync_aggregate": {
                "sync_committee_bits": "0x01",
                "sync_committee_signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
              },
              "execution_payload_header": {
                "parent_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "fee_recipient": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "receipts_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "logs_bloom": "0x
                "prev_randao": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "block_number": "1",
                "gas_limit": "1",
                "gas_used": "1",
                "timestamp": "1",
                "extra_data": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "base_fee_per_gas": "1",
                "block_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "transactions_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
              }
            }
          },
          "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
        }
      },
      "Bellatrix.ExecutionPayload": {
        "value": {
          "version": "bellatrix",
          "data": {
            "parent_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
            "fee_recipient": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
            "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
            "receipts_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
            "logs_bloom": "0x
            "prev_randao": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
            "block_number": "1",
            "gas_limit": "1",
            "gas_used": "1",
            "timestamp": "1",
            "extra_data": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
            "base_fee_per_gas": "1",
            "block_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
            "transactions": [
              "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86"
            ]
          }
        }
      },
      "Bellatrix.SignedBuilderBid": {
        "value": {
          "version": "bellatrix",
          "data": {
            "message": {
              "header": {
                "parent_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "fee_recipient": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
                "state_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "receipts_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "logs_bloom": "0x
                "prev_randao": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "block_number": "1",
                "gas_limit": "1",
                "gas_used": "1",
                "timestamp": "1",
                "extra_data": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "base_fee_per_gas": "1",
                "block_hash": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
                "transactions_root": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2"
              },
              "value": "1",
              "pubkey": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
            },
            "signature": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
          }
        }
      }
    }
  }
}
